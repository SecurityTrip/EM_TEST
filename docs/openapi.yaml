openapi: 3.0.3
info:
  title: Bank Cards Management API
  version: 1.0.0
  description: API для управления банковскими картами, включая регистрацию, вход, обновление токенов, создание, просмотр, обновление и удаление карт, а также переводы между картами.
servers:
  - url: http://localhost:8080
    description: Локальный сервер
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          example: user1
        password:
          type: string
          format: password
          example: pass1234
        role:
          type: string
          enum:
            - USER
            - ADMIN
          example: USER
      required:
        - username
        - password
        - role
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          example: user1
        password:
          type: string
          format: password
          example: pass1234
      required:
        - username
        - password
    RefreshRequest:
      type: object
      properties:
        refreshToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      required:
        - refreshToken
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        refreshToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      required:
        - accessToken
        - refreshToken
    Card:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        cardNumber:
          type: string
          description: Маскированный номер карты (например, **** **** **** 1234)
          example: "**** **** **** 1234"
        owner:
          type: string
          example: John Doe
        expiryDate:
          type: string
          format: date
          example: 2026-12-31
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCKED
            - EXPIRED
          example: ACTIVE
        balance:
          type: number
          format: double
          example: 1000.00
      required:
        - cardNumber
        - owner
        - expiryDate
        - status
        - balance
    CardDTO:
      type: object
      properties:
        number:
          type: string
          description: Полный номер карты (16 цифр), будет зашифрован
          example: "1234567812345678"
        ownerId:
          type: integer
          format: int64
          description: Идентификатор владельца (пользователя)
          example: 1
        expiration:
          type: string
          format: date
          example: 2026-12-31
        balance:
          type: number
          format: int64
          example: 1000.00
      required:
        - number
        - ownerId
        - expiration
        - balance
    TransferDTO:
      type: object
      properties:
        fromCardId:
          type: integer
          format: int64
          example: 1
        toCardId:
          type: integer
          format: int64
          example: 2
        amount:
          type: number
          format: double
          example: 500.00
      required:
        - fromCardId
        - toCardId
        - amount
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: Error message
        status:
          type: integer
          example: 400
        timestamp:
          type: string
          format: date-time
          example: 2025-08-08T15:16:00Z
paths:
  /user/register:
    post:
      summary: Регистрация пользователя
      operationId: registerUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Успешная регистрация с выдачей токенов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '500':
          description: Ошибка при регистрации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/login:
    post:
      summary: Вход пользователя
      operationId: loginUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешный вход с выдачей токенов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Неверный логин или пароль
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/refresh:
    post:
      summary: Обновление JWT токенов
      operationId: refreshToken
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
      responses:
        '200':
          description: Успешное обновление токенов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Неверный refresh токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /card:
    post:
      summary: Создание новой карты
      operationId: createCard
      tags:
        - Cards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardDTO'
      responses:
        '201':
          description: Карта успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: Неверные входные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Доступ запрещён (требуется роль ADMIN)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /admin/users:
    get:
      summary: Список пользователей (только ADMIN)
      tags: [Users]
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список пользователей
    post:
      summary: Создать пользователя (только ADMIN)
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Создан пользователь
  /admin/users/{id}:
    patch:
      summary: Обновить пользователя (только ADMIN)
      tags: [Users]
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer, format: int64 }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username: { type: string }
                password: { type: string }
                role: { type: string, enum: [USER, ADMIN] }
      responses:
        '200':
          description: Обновлено
    delete:
      summary: Удалить пользователя (только ADMIN)
      tags: [Users]
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer, format: int64 }
      responses:
        '204':
          description: Удалено
    get:
      summary: Получение списка карт с пагинацией и фильтрацией
      operationId: readCards
      tags:
        - Cards
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
        - name: status
          in: query
          schema:
            type: string
            enum:
              - ACTIVE
              - BLOCKED
              - EXPIRED
        - name: owner
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Список карт
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Card'
                  pageable:
                    type: object
                  totalPages:
                    type: integer
                  totalElements:
                    type: integer
        '403':
          description: Доступ запрещён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /card/{id}:
    get:
      summary: Получение карты по ID
      operationId: getCardById
      tags:
        - Cards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Карта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '403':
          description: Доступ запрещён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    patch:
      summary: Обновление карты
      operationId: updateCard
      tags:
        - Cards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardDTO'
      responses:
        '200':
          description: Карта успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: Неверные входные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Доступ запрещён (требуется роль ADMIN)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    delete:
      summary: Удаление карты
      operationId: deleteCard
      tags:
        - Cards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Карта успешно удалена
        '400':
          description: Неверный идентификатор карты
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Доступ запрещён (требуется роль ADMIN)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /card/transfer:
    post:
      summary: Перевод между картами
      operationId: transferMoney
      tags:
        - Cards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferDTO'
      responses:
        '200':
          description: Перевод успешно выполнен
        '400':
          description: Неверные данные для перевода
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Доступ запрещён (требуется роль USER)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /card/{id}/block:
    post:
      summary: Запрос на блокировку карты пользователем
      operationId: requestBlockCard
      tags:
        - Cards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Карта заблокирована
        '400':
          description: Неверный идентификатор карты
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Доступ запрещён (требуется роль USER)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /card/{id}/block-admin:
    post:
      summary: Блокировка карты администратором
      operationId: blockCardAdmin
      tags:
        - Cards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Карта заблокирована
        '403':
          description: Доступ запрещён (требуется роль ADMIN)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /card/{id}/activate:
    post:
      summary: Активация карты администратором
      operationId: activateCardAdmin
      tags:
        - Cards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Карта активирована
        '403':
          description: Доступ запрещён (требуется роль ADMIN)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
security:
  - BearerAuth: []